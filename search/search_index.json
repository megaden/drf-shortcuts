{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Summary Shortcuts for speeding up your development based on Django REST Framework (DRF). DRF shortcuts library allows you to: Expose your Django model class using a one-liner register_standard_endpoint(your_router, YourModel) . Exposed API endpoint will support search & ordering of items for suitable fields (backed up by SearchFilter & OrderingFilter filter backends) and will be nicely documented in both Browseable API & upon issuing OPTIONS requests against it. Create rest_framework.viewsets.ModelViewSet based viewset class for your Django model using a one-liner create_standard_viewset_class(YourModel) . Viewset capabilities will be similar to the one registered using register_standard_endpoint shortcut. Create JS-based clients friendly serializer class for your Django model using a one-liner create_standard_serializer_class(YourModel) . Use library classes & helper functions to tailor your own DRF shortcuts. Quick Links Requirements & Installation Examples API Reference","title":"Overview"},{"location":"#summary","text":"Shortcuts for speeding up your development based on Django REST Framework (DRF). DRF shortcuts library allows you to: Expose your Django model class using a one-liner register_standard_endpoint(your_router, YourModel) . Exposed API endpoint will support search & ordering of items for suitable fields (backed up by SearchFilter & OrderingFilter filter backends) and will be nicely documented in both Browseable API & upon issuing OPTIONS requests against it. Create rest_framework.viewsets.ModelViewSet based viewset class for your Django model using a one-liner create_standard_viewset_class(YourModel) . Viewset capabilities will be similar to the one registered using register_standard_endpoint shortcut. Create JS-based clients friendly serializer class for your Django model using a one-liner create_standard_serializer_class(YourModel) . Use library classes & helper functions to tailor your own DRF shortcuts.","title":"Summary"},{"location":"#quick-links","text":"Requirements & Installation Examples API Reference","title":"Quick Links"},{"location":"examples/","text":"Examples Exposing a Django model # in urls.py from rest_framework.routers import DefaultRouter from drf_shortcuts.urls import register_standard_endpoint from my_fancy_app.models import MyModel router = DefaultRouter(trailing_slash=False) register_standard_endpoint(router, MyModel) # ... more URL configuration code here ... urlpatterns = router.urls Creating a viewset class # in views.py from drf_shortcuts.views import create_standard_viewset_class from my_fancy_app.models import MyModel MyModelViewSet = create_standard_viewset_class(MyModel) Creating a serializer class # in serializers.py from drf_shortcuts.serializers import create_standard_serializer_class from my_fancy_app.models import MyModel MyModelSerializer = create_standard_serializer_class(MyModel) Customizing a view using helpers # in views.py from rest_framework.viewsets import ReadOnlyModelViewSet from drf_shortcuts.views import append_search_info_to_docstring from drf_shortcuts.serializers import create_standard_serializer_class from my_fancy_app.models import MyModel @append_search_info_to_docstring class MyModelViewSet(ReadOnlyModelViewSet): serializer_class = create_standard_serializer_class(MyModel) # ... rest of the view code ...","title":"Examples"},{"location":"examples/#examples","text":"","title":"Examples"},{"location":"examples/#exposing-a-django-model","text":"# in urls.py from rest_framework.routers import DefaultRouter from drf_shortcuts.urls import register_standard_endpoint from my_fancy_app.models import MyModel router = DefaultRouter(trailing_slash=False) register_standard_endpoint(router, MyModel) # ... more URL configuration code here ... urlpatterns = router.urls","title":"Exposing a Django model"},{"location":"examples/#creating-a-viewset-class","text":"# in views.py from drf_shortcuts.views import create_standard_viewset_class from my_fancy_app.models import MyModel MyModelViewSet = create_standard_viewset_class(MyModel)","title":"Creating a viewset class"},{"location":"examples/#creating-a-serializer-class","text":"# in serializers.py from drf_shortcuts.serializers import create_standard_serializer_class from my_fancy_app.models import MyModel MyModelSerializer = create_standard_serializer_class(MyModel)","title":"Creating a serializer class"},{"location":"examples/#customizing-a-view-using-helpers","text":"# in views.py from rest_framework.viewsets import ReadOnlyModelViewSet from drf_shortcuts.views import append_search_info_to_docstring from drf_shortcuts.serializers import create_standard_serializer_class from my_fancy_app.models import MyModel @append_search_info_to_docstring class MyModelViewSet(ReadOnlyModelViewSet): serializer_class = create_standard_serializer_class(MyModel) # ... rest of the view code ...","title":"Customizing a view using helpers"},{"location":"setup/","text":"Requirements Python 3.6+ Django 2.0+ Django REST Framework 3.8+ Installation Install using pip: pip install drf-shortcuts","title":"Requirements & Installation"},{"location":"setup/#requirements","text":"Python 3.6+ Django 2.0+ Django REST Framework 3.8+","title":"Requirements"},{"location":"setup/#installation","text":"Install using pip: pip install drf-shortcuts","title":"Installation"},{"location":"tbc/","text":"Coming soon","title":"rest of the package"},{"location":"tbc/#coming-soon","text":"","title":"Coming soon"},{"location":"generated/drf_shortcuts-urls/","text":"drf_shortcuts.urls urls module of DRF (Django REST Framework) shortcuts package. Functions: register_standard_endpoint : Exposes Django model via DRF router. See also: drf_shortcuts.views.create_standard_viewset_class register_standard_endpoint register_standard_endpoint(router, model, viewset_cls=None) Exposes API endpoints for Django model via DRF router. Parameters: router rest_framework.routers.BaseRouter : The instance of DRF router to add viewset to. model django.db.models.Model : The model class to expose. viewset_cls rest_framework.viewsets.GenericViewSet : The viewset to expose. Optional hence if omitted the 'standard' viewset class will be used. See also drf_shortcuts.views.create_standard_viewset_class .","title":"urls module"},{"location":"generated/drf_shortcuts/","text":"drf_shortcuts DRF (Django REST Framework) shortcuts package. Common shortcuts for speeding up your development based on Django REST Framework (DRF). Modules: serializers : Base classes & helper functions for creating serializer types. urls : Now contains only 'register_standard_endpoint' helper function for registering Model against DRF Router. views : Helper functions for creating view & viewset types.","title":"package"}]}